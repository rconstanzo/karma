<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!-- DO NOT EDIT THIS FILE ... YOU WILL LOSE YOUR WORK ... THIS IS NOT STRICTLY TRUE FOR karma~ -->

<c74object name="karma~" module="" category="">      <!-- do we need "module"/"category" here ?? -->

	<digest>Varispeed Audio Looper</digest>
	<description>A dynamically lengthened varispeed record/playback looper with complex functionality.</description>
      <discussion>
      <h4><openfilelink filename="karma_overview.maxpat">Open the Overview Patch</openfilelink></h4>
            <p>The <o>karma~</o> object is a dynamically lengthed varispeed sample-recording and playback object with complex functionality, which references the audio information stored in a <o>buffer~</o> object having the same name.</p>
      </discussion>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Rodrigo Constanzo, raja, and Pete</metadata>
		<metadata name="tag">Live Sampling</metadata>
		<metadata name="tag">Looping</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="signal">
			<digest>
				Audio Inlet(s)
			</digest>
			<description>
                        Number of signal inlets depends on <m>channels</m> argument to object.
			</description>
		</inlet>
		<inlet id="1" type="signal">
			<digest>
				Speed factor (signal or float)
			</digest>
			<description>
                        Varispeed: <b>1.</b> = normal speed, <b>0.5</b> = half speed, <b>2.</b> = double speed, etc.
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="signal">
			<digest>
				Audio Outlet(s)
			</digest>
			<description>
                        Number of signal outlets depends on <m>channels</m> (2nd) argument to object.
			</description>
		</outlet>
		<outlet id="1" type="signal">
			<digest>
				Signal rate sync outlet phase 0..1
			</digest>
			<description>
                        If the <m>syncout</m> attribute is true, this outlet appears as penultimate outlet, otherwise it is absent (default).
			</description>
		</outlet>
		<outlet id="2" type="list">
			<digest>
				Real time list outlet with data of internal <o>karma~</o> state.
			</digest>
			<description>
                        Always the last (right-most) outlet. List containing 7 atoms:<br />
                        atom 1 = current position (float 0..1)<br />
                        atom 2 = play state (int 0/1)<br />
                        atom 3 = record state (int 0/1)<br />
                        atom 4 = start position (float ms)<br />
                        atom 5 = end position (float ms)<br />
                        atom 6 = window size (float ms)<br />
                        atom 7 = current state (int 0..5, 0=stop 1=play 2=record 3=overdub 4=append 5=initial)<br />
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="buffername" optional="0" type="symbol">
			<digest>
				Name of <o>buffer~</o> to be associated with the <o>karma~</o> instance
			</digest>
			<description>
				<o>karma~</o> will not operate without an associated <o>buffer~</o>.
                        The associated <o>buffer~</o> determines memory and length (if associating a buffer~ of <b>0 ms</b> in size <o>karma~</o> will do nothing).
                        The associated <o>buffer~</o> can be changed on the fly (see the <m>set</m> message) but one must be present on instantiation.
			</description>
		</objarg>
		<objarg name="channels" optional="1" type="int">
			<digest>
				Set the number of output channels
			</digest>
			<description>
				Set the number of output channels to use with the <o>karma~</o> instance.
                        Channel counts can be 1, 2 or 4. The number of audio outlets will change depending on this argument.
                        The default is 1.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
      <methodlist>

            <method name="append">
                  <arglist />
                  <digest>
                        (get ready for) append recording
                  </digest>
                  <description>
                        (get ready for) append recording to end of currently used segment (as long as <o>buffer~</o> space is available).
                  </description>
            </method>
            <method name="jump">
			<arglist>
				<arg name="ARG_NAME_0" type="float" optional="0" />
			</arglist>
                  <digest>
                        Jump location
                  </digest>
                  <description>
                        Jump to location in current loop (in normalised segment length float 0..1).
                  </description>
            </method>
            <method name="overdub">
			<arglist>
				<arg name="ARG_NAME_0" type="float" optional="0" />
			</arglist>
                  <digest>
                        Overdubbing amplitude
                  </digest>
                  <description>
                        Amplitude (..0..1..) for when in overdubbing state.
                  </description>
            </method>
            <method name="play">
                  <arglist />
                  <digest>
                        Play the <o>karma~</o> <o>buffer~</o>
                  </digest>
                  <description>
                        Play the <o>karma~</o> <o>buffer~</o> from <b>stopped</b> or <b>recording</b> or <b>appending</b> state, or play from <o>buffer~</o> beginning if already in a <b>playing</b> state.
                  </description>
            </method>
            <method name="position">
			<arglist>
				<arg name="ARG_NAME_0" type="float" optional="0" />
			</arglist>
                  <digest>
                        Window position start
                  </digest>
                  <description>
                        Window position start point (in normalised phase float 0..1).
                  </description>
            </method>
            <method name="record">
                  <arglist />
                  <digest>
                        Start recording
                  </digest>
                  <description>
                        Starts recording (or overdubbing), or plays if already in a recording state.
                  </description>
            </method>
            <method name="resetloop">
                  <arglist />
                  <digest>
                        Reset loop to original loop points
                  </digest>
                  <description>
                        Reset the current <o>buffer~</o> loop to the loop points that were created when making the initial loop (the same as sending the message <m>setloop reset</m> to <o>karma~</o>).
                  </description>
            </method>
            <method name="set">
			<arglist>
				<arg name="ARG_NAME_0" type="symbol" optional="0" />
			</arglist>
                  <digest>
                        Set a (new) <o>buffer~</o> reference
                  </digest>
                  <description>
                        Set a (new) <o>buffer~</o> reference for recording or playback. <o>karma~</o> can switch buffers in real time. <m>set {buffername}</m> with no other arguments sets (new) <o>buffer~</o> reference and (re)sets loop points to entire <o>buffer~</o> length.
                  </description>
            </method>
            <method name="setloop">
			<arglist>
				<arg name="ARG_NAME_0" type="symbol/float" optional="1" />
				<arg name="ARG_NAME_1" type="float" optional="1" />
			</arglist>
                  <digest>
                        Set <o>karma~</o> loop points (not <m>window</m>!)
                  </digest>
                  <description>
                        Points (start/end) for setting <o>karma~</o> loop in selected <o>buffer~</o> (not <m>window</m>!). <m>setloop</m> with no arguments sets the loop to the entire <o>buffer~</o> length. <m>setloop reset</m> sets the loop points to those created when making the initial loop (the same as sending the <m>resetloop</m> message to <o>karma~</o>).
                  </description>
            </method>
            <method name="stop">
                  <arglist />
                  <digest>
                        Stop transport
                  </digest>
                  <description>
                        Stops the <o>karma~</o> internal transport immediately.
                  </description>
            </method>
            <method name="window">
			<arglist>
				<arg name="ARG_NAME_0" type="float" optional="0" />
			</arglist>
                  <digest>
                        Window size
                  </digest>
                  <description>
                        Window size (in normalised segment length float 0..1).
                  </description>
            </method>

      </methodlist>

	<!--ATTRIBUTES-->
      <attributelist>

            <attribute name="interp" get="1" set="1" type="int" size="1">
                  <digest>
                        Playback interpolation type
                  </digest>
                  <description>
                        Sets the <b>interpolation</b> mode used during playback. A setting of <m>interp 0</m> will only allow linear interpolation to be used at all times. The default setting of <m>interp 1</m> will use linear interpolation whilest recording and cubic interpolation during regular playback. This is most noticable when switching between overdub and playback and slower playback speeds as one can hear the aliasing more with playback that uses linear interpolation. <m>interp 2</m> is the same as <m>1</m> but for spline interpolation during playback.<br/>
                        Available options:<br/>
                        0 = <b>linear</b><br/>
                        1 = <b>cubic</b><br/>
                        2 = <b>spline</b><br/>
                  </description>
                  <attributelist>
                        <attribute name="default" get="1" set="1" type="int" size="1" value="1" />
                  </attributelist>
            </attribute>

            <attribute name="ramp" get="1" set="1" type="int" size="1">
                  <digest>
                        Ramp fade time in samples
                  </digest>
                  <description>
                        Sets the offline ramp fade time in samples. These are the cosine-based ramps which happen outside the direction of travel of the playhead to declick the recording, as well as a real time fade at the record input to declick the recording outside real time awareness. Since the record head trails the play head by 1 sample, the cosine fades are never heard during their creation, only after the play head loops around or changes direction to go over them.
                  </description>
                  <attributelist>
                        <attribute name="default" get="1" set="1" type="int" size="1" value="256" />
                  </attributelist>
            </attribute>

            <attribute name="report" get="1" set="1" type="int" size="1">
                  <digest>
                        List outlet update rate
                  </digest>
                  <description>
                        Sets the update rate in milliseconds for the list output.
                  </description>
                  <attributelist>
                        <attribute name="default" get="1" set="1" type="int" size="1" value="50." />
                  </attributelist>
            </attribute>

            <attribute name="sncurve" get="1" set="1" type="int" size="1">
                  <digest>
                        Curve type for 'Switch and Ramp' function
                  </digest>
                  <description>
                        Applies easing functions to the 'Switch and Ramp' algorithm to allow for different in and out curves.<br/>
                        The different curve types available are:<br/>
                        0 = <b>linear</b><br/>
                        1 = <b>sine</b><br/>
                        2 = <b>cubic ease in</b><br/>
                        3 = <b>cubic ease out</b><br/>
                        4 = <b>exponential ease in</b><br/>
                        5 = <b>exponential ease out</b><br/>
                        6 = <b>exponential ease in and out</b>
                  </description>
                  <attributelist>
                        <attribute name="default" get="1" set="1" type="int" size="1" value="1" />
                  </attributelist>
            </attribute>

            <attribute name="snramp" get="1" set="1" type="int" size="1">
                  <digest>
                        'Switch and Ramp' fade time in samples
                  </digest>
                  <description>
                        Sets the fade time for 'Switch and Ramp' in samples, independently of the offline ramp time set via ramp. 'Switch and Ramp' declicks instantaneous changes at the playback, primarily when jumping around the buffer arbitrarily.
                  </description>
                  <attributelist>
                        <attribute name="default" get="1" set="1" type="int" size="1" value="256" />
                  </attributelist>
            </attribute>

            <attribute name="syncout" get="1" set="0" type="int" size="1">
                  <digest>
                        Create an audio rate sync outlet
                  </digest>
                  <description>
                        Set as <m>integer</m> flag <b>0</b> or <b>1</b>. With <m>syncout</m> switched on, <o>karma~</o> will add an additional audio signal outlet to the object, after the audio outs and before the final data outlet. This outlet is an audio rate sync signal 0..1 for audio rate synchronous matching to other MSP processes. With <m>syncout</m> switched off (the default), <o>karma~</o> will have no additional outlets. <b>This attribute cannot be sent to the object dynamically or changed in the inspector, it is only available at instantiation time</b>.
                  </description>
                  <attributelist>
                        <attribute name="default" get="1" set="1" type="int" size="1" value="0" />
                  </attributelist>
            </attribute>

      </attributelist>

	<!--RELATED-->
	<seealsolist>
            <seealso name="mc.karma~" />
            <seealso name="buffer~" />
            <seealso name="groove~" />
            <seealso name="ipoke~" />
            <seealso name="phasegroove~" />
            <seealso name="play~" />
            <seealso name="poke~" />
            <seealso name="record~" />
            <seealso name="wave~" />
            <seealso name="waveform~" />
      </seealsolist>
</c74object>